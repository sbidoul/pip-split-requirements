[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pip-split-requirements"
description = ''
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [{ name = "St√©phane Bidoul", email = "stephane.bidoul@acsone.eu" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["typer"]
dynamic = ["version"]

[project.optional-dependencies]
test = ["pytest", "coverage", "mypy"]

[project.entry-points.console_scripts]
pip-split-requirements = "pip_split_requirements.__main__:main"

[project.urls]
Documentation = "https://github.com/sbidoul/pip-split-requirements#readme"
Issues = "https://github.com/sbidoul/pip-split-requirements/issues"
Source = "https://github.com/sbidoul/pip-split-requirements"

[tool.hatch.version]
source = "vcs"

# coverage

[tool.coverage.run]
branch = true
omit = []

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

# mypy

[tool.mypy]
strict = true
show_error_codes = true

# ruff

[tool.ruff]
fix = true
select = ["ALL"]
ignore = [
  "D",
  "TCH003", # not mature?
]
task-tags = ["SPDX-License-Identifier"]  # avoid ERA001

[tool.ruff.per-file-ignores]
"tests/*" = [
  "INP001",  # File is part of an implicit namespace package.
  "S101",    # Use of assert detected.
  "PLR2004", # Magic value used in comparison, consider replacing ... with a constant variable
]

[tool.ruff.isort]
known-first-party = ["pip_split_requirements"]

[tool.ruff.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 11
